# üìå –í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞ 8 –ø—Ä–æ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö,
# –≥–¥–µ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∏–º—è, –ª–∏—á–Ω—ã–π
# –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7) —Å–æ—Ö—Ä–∞–Ω—è—è
# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤
# —Å–≤–æ–π—Å—Ç–≤–∞—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
# –∏–∑ JSON —Ñ–∞–π–ª–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

import random
import json


class User():

    def __init__(self, name="", id=0, access_lvl=0):
        self.name = name
        self.id = id
        self.access_lvl = access_lvl
        self.users_list = []  # —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    def user_input(self):
        user_list = []  # –î–∞–Ω–Ω—ã–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        users_list = []  # —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

        while True:
            try:
                name = input('Name: ')
                if not str.istitle(name):
                    raise ValueError
            except Exception as e:
                print(e)
            if not name:
                for i in user_list:
                    users_list.append(User(*i))
                self.users_list = users_list
                break
            while True:
                user_id = random.randint(10_000, 100_000)
                if user_id not in [uid[2] for uid in user_list]:
                    break
            while True:
                lvl = input('lvl: ')
                if lvl.isdigit() and 0 < int(lvl) < 8:
                    user_list.append((name, int(user_id), int(lvl)))
                    break

    def __str__(self):
        return f'{self.name} {self.id} {self.access_lvl}'

    def json_write(self, file_name):
        result_dict = {}

        for user in self.users_list:
            result_dict[user.id] = [user.name, user.access_lvl]
        try:
            with open(file_name, 'w', encoding='utf-8') as f:
                json.dump(result_dict, f, indent=4, ensure_ascii=False)
        except EOFError as e:
            print(e)

    def json_read(self, file_name):
        try:
            with open(file_name, 'r', encoding='utf-8') as f:
                new_dict = json.load(f)
        except EOFError as e:
            print(e)

        # for key in new_dict:
        #     self.users_list.append(User(new_dict[key][0], key, new_dict[key][1]))


new_user = User('', '', '')
new_user_list = new_user.user_input()
new_user.json_write('task4.json')

new_user.json_read('task4.json')
for i in new_user.users_list:
    print(i)
