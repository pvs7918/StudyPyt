# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 4.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í
# —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π
# –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå *–ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
# –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ,
# —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-
# —è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
import sys
import logging
from datetime import datetime


def my_parse_date(src_text):
    # —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Ñ–æ—Ä–º–∞—Ç–∞ "3-—è —Å—Ä–µ–¥–∞ –º–∞—è" —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞

    dict_week_day = {'–ø–æ–Ω': ('Monday', 1), '–≤—Ç–æ': ('Tuesday', 2), '—Å—Ä–µ': ('Wednesday', 3),
                     '—á–µ—Ç': ('Thursday', 4), '–ø—è—Ç': ('Friday', 5), '—Å—É–±': ('Saturday', 6),
                     '–≤–æ—Å': ('Sunday', 7)}

    dict_for_month = {
        '—è–Ω–≤': ('January', 1), '—Ñ–µ–≤': ('February', 2), '–º–∞—Ä': ('March', 3), '–∞–ø—Ä': ('April', 4),
        '–º–∞—è': ('May', 5), '–∏—é–Ω': ('June', 6), '–∏—é–ª': ('July', 7), '–∞–≤–≥': ('August', 8),
        '—Å–µ–Ω': ('September', 9), '–æ–∫—Ç': ('October', 10), '–Ω–æ—è': ('November', 11), '–¥–µ–∫': ('December', 12)
    }

    parse_date = src_text.split()

    if len(parse_date) == 1:
        res_text = f'–í –¥–∞—Ç–µ "{src_text}" –≤—Å–µ–≥–æ 1 —ç–ª–µ–º–µ–Ω—Ç,–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2-3: –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏  –∏ –º–µ—Å—è—Ü'
        logging.error(res_text)
        return None, res_text
    if len(parse_date) > 3:
        res_text = f'–í –¥–∞—Ç–µ "{src_text}" –±–æ–ª—å—à–µ 3 —ç–ª–µ–º–µ–Ω—Ç–æ–≤,–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2-3: –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü'
        logging.error(res_text)
        return None, res_text

    elif len(parse_date) == 3:  # –±–∞–∑–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –∑–∞–¥–∞–Ω—ã –≤—Å–µ –ø–æ–ª—è - –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü
        # –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
        str_week_num = ''
        for ch in parse_date[0]:
            if ch.isdigit():
                str_week_num += ch
        if str_week_num != '':
            parse_week_num = int(str_week_num)
        else:
            res_text = f'–í –¥–∞—Ç–µ "{src_text}" –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ {parse_date[0]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ'
            logging.error(res_text)
            return None, res_text

        # –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        if parse_date[1][:3] in dict_week_day:
            parse_week_day_name, parse_week_day_num = dict_week_day[parse_date[1][:3]]
        else:
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç, —á—Ç–æ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∑–∞–¥–∞–Ω —á–∏—Å–ª–æ–º
            if parse_date[1].isdigit():
                parse_week_day_num = int(parse_date[1])
                if not (0 < parse_week_day_num < 8):
                    res_text = f'–í –¥–∞—Ç–µ "{src_text}" –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ {parse_date[1]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å' \
                               f' –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 7.'
                    logging.error(res_text)
                    return None, res_text
            else:
                res_text = f'–í –¥–∞—Ç–µ "{src_text}" –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ {parse_date[1]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ'
                logging.error(res_text)
                return None, res_text

        # –º–µ—Å—è—Ü
        if parse_date[2][:3] in dict_for_month:
            parse_month, parse_month_num = dict_for_month[parse_date[2][:3]]
        else:
            if parse_date[2].isdigit():
                parse_month_num = int(parse_date[2])
                if not (0 < parse_month_num < 13):
                    res_text = f'–í –¥–∞—Ç–µ "{src_text}" –º–µ—Å—è—Ü {parse_date[2]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å' \
                               f' –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 12.'
                    logging.error(res_text)
                    return None, res_text
            else:
                res_text = f'–í –¥–∞—Ç–µ "{src_text}" –º–µ—Å—è—Ü {parse_date[2]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ'
                logging.error(res_text)
                return None, res_text

    # —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –Ω–∞–¥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∫–∞–∫–æ–≥–æ
    # –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    elif len(parse_date) == 2:
        # –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ - –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ
        str_week_num = ''
        for ch in parse_date[0]:
            if ch.isdigit():
                str_week_num += ch
        if str_week_num != '':
            parse_week_num = int(str_week_num)

            # –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - –∑–∞–¥–∞–Ω —Å–ª–æ–≤–æ–º?
            if parse_date[1][:3] in dict_week_day:
                parse_week_day_name, parse_week_day_num = dict_week_day[parse_date[1][:3]]
                parse_month = 1  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –º–µ—Å—è—Ü–∞
            else:
                # –º–µ—Å—è—Ü - –∑–∞–¥–∞–Ω —Å–ª–æ–≤–æ–º?
                if parse_date[1][:3] in dict_for_month:
                    parse_week_day_num = 1
                    parse_month, parse_month_num = dict_for_month[parse_date[1][:3]]
                else:
                    if parse_date[1].isdigit():
                        if 0 < int(parse_date[1]) < 8:
                            parse_week_day_num = int(parse_date[1])
                            parse_month_num = 1
                        elif 7 < int(parse_date[1]) < 13:
                            parse_week_day_num = 1
                            parse_month_num = parse_date[1]
                        else:
                            res_text = f'–î–∞—Ç–∞ "{src_text}" –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è. –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
                            logging.error(res_text)
                            return None, res_text
                    else:
                        res_text = f'–î–∞—Ç–∞ "{src_text}" –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è. –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
                        logging.error(res_text)
                        return None, res_text

        else:
            # –Ω–∞ –ø–µ—Ä–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏ parse_date[0] - –Ω–µ —á–∏—Å–ª–æ.
            # –ü–æ–ª—É—á–∞–µ—Ç—Å—è —ç—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü (—Å–ª–æ–≤–æ–º –∏–ª–∏ —á–∏—Å–ª–æ–º)
            # –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é = 1
            parse_week_num = 1
            # –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
            if parse_date[0][:3] in dict_week_day:
                parse_week_day_name, parse_week_day_num = dict_week_day[parse_date[0][:3]]
            else:
                res_text = f'–í –¥–∞—Ç–µ "{src_text}" –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ {parse_date[0]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ.'
                logging.error(res_text)
                return None, res_text

            # –º–µ—Å—è—Ü
            if parse_date[1][:3] in dict_for_month:
                parse_month, parse_month_num = dict_for_month[parse_date[1][:3]]
            else:
                if parse_date[1].isdigit():
                    parse_month_num = int(parse_date[1])
                    if not (0 < parse_month_num < 13):
                        res_text = f'–í –¥–∞—Ç–µ "{src_text}" –º–µ—Å—è—Ü {parse_date[1]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 12.'
                        logging.error(res_text)
                        return None, res_text
                else:
                    res_text = f'–í –¥–∞—Ç–µ "{src_text}" –º–µ—Å—è—Ü {parse_date[1]} –∑–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ'
                    logging.error(res_text)
                    return None, res_text

    # –≥–æ–¥ - –±–µ—Ä–µ–º —Ç–µ–∫—É—â–∏–π –≥–æ–¥
    parse_year = datetime.now().year

    # ----–≤—ã—á–∏—Å–ª—è–µ–º –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    # –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
    cur_text = f'1 {parse_month_num} {parse_year}'
    week_day_for_1day_month = datetime.weekday(datetime.strptime(cur_text, '%d %m %Y')) + 1
    # –∫–æ—Ä—Ç–µ–∂ d1 —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è 1 —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞
    d1 = (1, week_day_for_1day_month)
    # –∫–æ—Ä—Ç–µ–∂ d2 —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–µ–º–æ–π –¥–∞—Ç—ã
    d2 = (parse_week_num, parse_week_day_num)

    if d2[1] >= d1[1]:
        parse_day_of_month = (d2[0] - d1[0]) * 7 + (d2[1] - d1[1]) + 1
    else:
        parse_day_of_month = (d2[0] - d1[0] + 1) * 7 + (d2[1] - d1[1]) + 1

    cur_text = f'{parse_day_of_month} {parse_month_num} {parse_year}'
    try:
        cur_date = datetime.strptime(cur_text, '%d %m %Y')
        res_text = f'–ò—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞: {src_text}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {cur_date}, –∫–æ–Ω—Ç—Ä–æ–ª–∏ (‚Ññ –Ω–µ–¥–µ–ª–∏, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü): ' \
                   f'{parse_week_num}, {parse_week_day_num}, {parse_month_num}'
    except Exception as e:
        logging.error(f'–í –¥–∞—Ç–µ "{src_text}" –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥–∞—Ç—É: {e}. '
                      f' –ö–æ–Ω—Ç—Ä–æ–ª–∏ (‚Ññ –Ω–µ–¥–µ–ª–∏, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü): '
                      f'{parse_week_num}, {parse_week_day_num}, {parse_month_num}')
        res_text = f'–ò—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞: {src_text}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: None. –°–º–æ—Ç—Ä–∏ –ª–æ–≥.'
        cur_date = None

    return cur_date, res_text


if __name__ == "__main__":

    # –≤–∫–ª—é—á–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging.basicConfig(filename='task5.log', filemode='a',
                        encoding='utf-8', level=logging.INFO)

    # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:
    # "3-—è –ø—è—Ç–Ω–∏—Ü–∞ –∏—é–ª—è" "1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è" "3-—è —Å—Ä–µ–¥–∞ –º–∞—è" "5-–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –¥–µ–∫–∞–±—Ä—è"
    # "3-—è –ø—è—Ç–Ω–∏—Ü–∞ –∏—é–ª—è" "1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è"
    # –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    # "3-—è 5 –∏—é–ª—è" "1-–π 4 11" "5-–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 12"
    # –Ω–µ–ø–æ–ª–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    # "–ø—è—Ç–Ω–∏—Ü–∞ –∏—é–ª—è" "1-–π —á–µ—Ç–≤–µ—Ä–≥" "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 12"

    # –µ—Å–ª–∏ –¥–∞—Ç—ã –∑–∞–¥–∞–Ω—ã —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É, —Ç–æ –æ–Ω–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é—Ç—Å—è, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫
    if len(sys.argv) > 1:
        date_text_list = sys.argv[1:]
    else:
        date_text_list = ["4-–π —Ñ–µ–≤—Ä–∞–ª—è", "5 7", "—Å—É–±–±–æ—Ç–∞ 6", "5-–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –¥–µ–∫–∞–±—Ä—è", "5 7 12", "5-–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 12",
                          "3-—è –ø—è—Ç–Ω–∏—Ü–∞ –∏—é–ª—è", "1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è", "3-—è —Å—Ä–µ–¥–∞ –º–∞—è", "3-—è 5 –∏—é–ª—è", "1-–π 4 11"]

    for src_text in date_text_list:
        cur_date, comment = my_parse_date(src_text)
        print(comment)
