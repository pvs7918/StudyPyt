# üìå –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å logging –¥–ª—è
# –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª.
# üìå –ù–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å.

import logging
# logging.basicConfig(level=logging.NOTSET)
# logging.debug('–û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ "–ø—Ä–∏–Ω—Ç–æ–≤"')
# logging.info('–ù–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–±–æ—Ç–µ –∫–æ–¥–∞')
# logging.warning('–í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞–¥–≤–∏–≥–∞–µ—Ç—Å—è –±—É—Ä—è!')
# logging.critical('–ù–∞ —ç—Ç–æ–º –≤—Å—ë')


logging.basicConfig(filename='task1.log', filemode='w',
encoding='utf-8', level=logging.ERROR)

a, b = map(int, input("–í–≤–µ–¥–∏—Ç–µ a b: ").split())
try:
    c = a / b
    print(c)
except Exception as e:
    logging.warning(f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏. {e}')

