# import pickle
# res = pickle.loads(b"cos\nsystem\n(S'echo Hello world!'\ntR.")
# print(res)

# Модуль pickle не занимается проверкой потока байт на
# безопасность перед распаковкой. Не используйте его с тем набором байт,
# безопасность которого не можете гарантировать.
#
# В этом безобидном примере модуль получил доступ к консоли и вывел сообщение
# “Привет, мир!” прежде чем десериализовать поток байт в число ноль.


# Преобразуем словарь из главы про JSON в набор байт средствами модуля pickle
# Модуль pickle имеет несколько
# протоколов, который не гарантируют совместимость с более старыми версиями.
# Сейчас протоколом по умолчанию является версия 4. Она появилась в Python 3.4, а
# стала дефолтным протоколом с Python 3.8. Если вы не занимаетесь поддержкой
# старого кода, можно смело использовать четвёртую версию протокола.
# import pickle
#
# my_dict = {
# "first_name": "Джон",
# "last_name": "Смит",
# "hobbies": ["кузнечное дело", "программирование",
# "путешествия"],
# "age": 35,
# "children": [
# {
# "first_name": "Алиса",
# "age": 5
# },
# {
# "first_name": "Маруся",
# "age": 3
# }
# ]
# }
# print(my_dict)
# res = pickle.dumps(my_dict, protocol=pickle.DEFAULT_PROTOCOL)
# print(f'{res = }')



# 2
# Попробуем сохранить объекты, неподдерживаемые JSON в бинарный файл.
# import pickle
#
# def func(a, b, c):
#     return a + b + c
#
# my_dict = {
# "numbers": [42, 4.1415, 7+3j],
# "functions": (func, sum, max),
# "others": {True, False, 'Hello world!'},
# }
# with open('my_dict.pickle', 'wb') as f:
#     pickle.dump(my_dict, f)

# 3
# Десериализация
import pickle
# data = b'\xC2\xA9\x20\xF0\x9D\x8C\x86\x20\xE2\x98\x83'
# data = b'\x80\x04\x95\xe3\x00\x00\x00\x00\x00\x00\x00}\x94(\x8c\nfirst_name' \
#        b'\x94\x8c\x08\xd0\x94\xd0\xb6\xd0\xbe\xd0\xbd\x94\x8c\tlast_name' \
#        b'\x94\x8c\x08\xd0\xa1\xd0\xbc\xd0\xb8\xd1\x82\x94\x8c\x07hobbies' \
#        b'\x94]\x94(\x8c\x1b\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x87' \
#        b'\xd0\xbd\xd0\xbe\xd0\xb5 \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xbe\x94\x8c' \
#        b'\xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc' \
#        b'\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\x94' \
#        b'\x8c\x16\xd0\xbf\xd1\x83\xd1\x82\xd0\xb5\xd1\x88\xd0\xb5\xd1\x81' \
#        b'\xd1\x82\xd0\xb2\xd0\xb8\xd1\x8f\x94e\x8c\x03age\x94K\x8c\x08children' \
#        b'\x94]\x94(}\x94(h\x01\x8c\n\xd0\x90\xd0\xbb\xd0\xb8\xd1\x81\xd0\xb0' \
#        b'\x94h\nK\x05u}\x94(h\x01\x8c\x0c\xd0\x9c\xd0\xb0\xd1\x80\xd1\x83\xd1' \
#        b'\x81\xd1\x8f\x94h\nK\x03ueu.'

data=b'\x80\x04\x95\xe3\x00\x00\x00\x00\x00\x00\x00}\x94(\x8c\nfirst_name\x94\x8c\x08\xd0\x94\xd0\xb6\xd0\xbe\xd0\xbd\x94\x8c\tlast_name\x94\x8c\x08\xd0\xa1\xd0\xbc\xd0\xb8\xd1\x82\x94\x8c\x07hobbies\x94]\x94(\x8c\x1b\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x87\xd0\xbd\xd0\xbe\xd0\xb5 \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xbe\x94\x8c\xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\x94\x8c\x16\xd0\xbf\xd1\x83\xd1\x82\xd0\xb5\xd1\x88\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd1\x8f\x94e\x8c\x03age\x94K#\x8c\x08children\x94]\x94(}\x94(h\x01\x8c\n\xd0\x90\xd0\xbb\xd0\xb8\xd1\x81\xd0\xb0\x94h\nK\x05u}\x94(h\x01\x8c\x0c\xd0\x9c\xd0\xb0\xd1\x80\xd1\x83\xd1\x81\xd1\x8f\x94h\nK\x03ueu.'
new_dict = pickle.loads(data)
print(f'{new_dict = }')